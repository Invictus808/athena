# Workflow
name: Athena API CI Pipeline

# Workflow Trigger
on: [push, pull_request]


# Workflow Jobs
jobs:
    # Test Job
    test:
        runs-on: ubuntu-latest

        steps:
            -
                name: Checkout repository
                uses: actions/checkout@v2

            -
                name: Set up Python 3.9
                uses: actions/setup-python@v2
                with:
                    python-version: "3.9"

            -
                name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install flake8 black isort pytest
                    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                working-directory: src/

            -
                name: Lint with Flake8
                run: |
                    flake8 .
                    # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                    # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=119 --statistics
                working-directory: src/

            -
                name: Format with Black
                run: |
                    black .
                working-directory: src/

            -
                name: Sort imports with Isort
                run: |
                    isort .
                working-directory: src/

            -
                name: Test and coverage of Pytest
                run: |
                    pytest api/tests/ -p no:warnings --cov=api
                working-directory: src/


    # Build and Push Container Job
    build-and-push:
        needs: test

        runs-on: ubuntu-latest

        steps:
            -
                name: Set up QEMU
                uses: docker/setup-qemu-action@v1

            -
                name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            -
                name: Login to DockerHub
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_PASSWORD }}

            -
                name: Build and push
                uses: docker/build-push-action@v2
                with:
                    context: ./src
                    push: true
                    tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:SNAPSHOT
