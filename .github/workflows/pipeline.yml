# Workflow
name: Athena API CI Pipeline

# Workflow Trigger
on: [push, pull_request]


# Workflow Jobs
jobs:
    # Test Job
    test:
        runs-on: ubuntu-latest

        steps:
            -
                name: Checkout repository
                uses: actions/checkout@v2

            -
                name: Set up Python 3.9
                uses: actions/setup-python@v2
                with:
                    python-version: "3.9"

            -
                name: Environment checks
                run: |
                    pwd
                    python -V

            -
                name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install flake8 black isort pytest
                    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

            -
                name: Lint with Flake8
                run: |
                    flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
                    flake8 src --count --exit-zero --max-complexity=10 --max-line-length=119 --statistics

            -
                name: Format with Black
                run: |
                    black src

            -
                name: Sort imports with Isort
                run: |
                    isort src

            -
                name: Test with Pytest
                run: |
                    cd src/main/resources/
                    python -m pytest ../../tests/

            -
                name: Coverage of Pytest
                run: |
                    cd src/main/resources/
                    python -m pytest ../../tests/ -p no:warnings --cov=api


    # Build and Push Container Job
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            -
                name: Set up QEMU
                uses: docker/setup-qemu-action@v1

            -
                name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            -
                name: Login to DockerHub
                uses: docker/login-action@v1 
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -
                name: Build and push
                uses: docker/build-push-action@v2
                with:
                    push: true
                    tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:SNAPSHOT
